// Code generated by MockGen. DO NOT EDIT.
// Source: unit-tests/mongo (interfaces: MongoStorage)

// Package mockmongo is a generated GoMock package.
package mockmongo

import (
	reflect "reflect"
	mongo "unit-tests/mongo"

	gomock "github.com/golang/mock/gomock"
)

// MockMongoStorage is a mock of MongoStorage interface.
type MockMongoStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMongoStorageMockRecorder
}

// MockMongoStorageMockRecorder is the mock recorder for MockMongoStorage.
type MockMongoStorageMockRecorder struct {
	mock *MockMongoStorage
}

// NewMockMongoStorage creates a new mock instance.
func NewMockMongoStorage(ctrl *gomock.Controller) *MockMongoStorage {
	mock := &MockMongoStorage{ctrl: ctrl}
	mock.recorder = &MockMongoStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMongoStorage) EXPECT() *MockMongoStorageMockRecorder {
	return m.recorder
}

// GetLatestNotifications mocks base method.
func (m *MockMongoStorage) GetLatestNotifications() ([]mongo.Notification, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestNotifications")
	ret0, _ := ret[0].([]mongo.Notification)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestNotifications indicates an expected call of GetLatestNotifications.
func (mr *MockMongoStorageMockRecorder) GetLatestNotifications() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestNotifications", reflect.TypeOf((*MockMongoStorage)(nil).GetLatestNotifications))
}
